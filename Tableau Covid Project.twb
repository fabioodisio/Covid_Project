<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau table 1)' inline='true' name='federated.08tw9690ecxeru14rx61a1wn55hd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 1' name='excel-direct.1bk3cv21gk0jlu19mhi0z0n8obnn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Fabio Odisio/OneDrive/Desktop/Covid Project/Tableau table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1bk3cv21gk0jlu19mhi0z0n8obnn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1bk3cv21gk0jlu19mhi0z0n8obnn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A0C68CA4AA0F4A4EB28690678A065EB4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A0C68CA4AA0F4A4EB28690678A065EB4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A0C68CA4AA0F4A4EB28690678A065EB4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A0C68CA4AA0F4A4EB28690678A065EB4]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/FABIOO~1/AppData/Local/Temp/TableauTemp/#TableauTemp_0c4tr931mzwhzs16cwccb11q04gj.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/28/2024 11:46:32 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A0C68CA4AA0F4A4EB28690678A065EB4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A0C68CA4AA0F4A4EB28690678A065EB4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A0C68CA4AA0F4A4EB28690678A065EB4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A0C68CA4AA0F4A4EB28690678A065EB4'>
            <properties context=''>
              <relation connection='excel-direct.1bk3cv21gk0jlu19mhi0z0n8obnn' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau table 2)' inline='true' name='federated.1uq1h6o0mrh53517huagz1ia3a17' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 2' name='excel-direct.0a9w0e6056obkr12hwpji0a02gu5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Fabio Odisio/OneDrive/Desktop/Covid Project/Tableau table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0a9w0e6056obkr12hwpji0a02gu5' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0a9w0e6056obkr12hwpji0a02gu5' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_078607D4906345489F7F267411D7736C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_078607D4906345489F7F267411D7736C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_078607D4906345489F7F267411D7736C]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='Attribute' name='[attr:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/FABIOO~1/AppData/Local/Temp/TableauTemp/#TableauTemp_1e9p60m1g3pdkz10spjlm1uiw9qz.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/28/2024 11:47:34 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_078607D4906345489F7F267411D7736C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_078607D4906345489F7F267411D7736C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:location:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_078607D4906345489F7F267411D7736C'>
            <properties context=''>
              <relation connection='excel-direct.0a9w0e6056obkr12hwpji0a02gu5' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau table 3)' inline='true' name='federated.15kcvxb0txs0f51d6uro915ws39e' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 3' name='excel-direct.1eenu8310qi2gu10bkjey1f6tkqo'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Fabio Odisio/OneDrive/Desktop/Covid Project/Tableau table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1eenu8310qi2gu10bkjey1f6tkqo' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1eenu8310qi2gu10bkjey1f6tkqo' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FB3FCC0CEF1149EA9DB81B1307AD2927]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FB3FCC0CEF1149EA9DB81B1307AD2927]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FB3FCC0CEF1149EA9DB81B1307AD2927]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FB3FCC0CEF1149EA9DB81B1307AD2927]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_FB3FCC0CEF1149EA9DB81B1307AD2927]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/FABIOO~1/AppData/Local/Temp/TableauTemp/#TableauTemp_0b0slxk12yx4jo132vxc51v3t6ey.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/28/2024 11:47:42 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FB3FCC0CEF1149EA9DB81B1307AD2927]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FB3FCC0CEF1149EA9DB81B1307AD2927]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FB3FCC0CEF1149EA9DB81B1307AD2927]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FB3FCC0CEF1149EA9DB81B1307AD2927]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_FB3FCC0CEF1149EA9DB81B1307AD2927'>
            <properties context=''>
              <relation connection='excel-direct.1eenu8310qi2gu10bkjey1f6tkqo' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.0loyulk03vi2af14mktzx0qzlwgs' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.1lg81ap1lqiv1h1bmcmj402hhios'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Fabio Odisio/OneDrive/Desktop/Covid Project/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1lg81ap1lqiv1h1bmcmj402hhios' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1lg81ap1lqiv1h1bmcmj402hhios' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7BDADADE2652498B8B83199178FFCC20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7BDADADE2652498B8B83199178FFCC20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7BDADADE2652498B8B83199178FFCC20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7BDADADE2652498B8B83199178FFCC20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7BDADADE2652498B8B83199178FFCC20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_7BDADADE2652498B8B83199178FFCC20]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/FABIOO~1/AppData/Local/Temp/TableauTemp/#TableauTemp_0mohvtr0h4np3s10d123400axg0q.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/28/2024 11:47:55 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>298</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7BDADADE2652498B8B83199178FFCC20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>289</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7BDADADE2652498B8B83199178FFCC20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1419</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7BDADADE2652498B8B83199178FFCC20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17308</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7BDADADE2652498B8B83199178FFCC20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28756</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7BDADADE2652498B8B83199178FFCC20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' palette='red_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ce253c'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#dc333f'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e74445'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ee584c'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f36a57'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f77c66'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#fa8d77'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#fead9e'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Russia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Germany&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Japan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;France&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Italy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Israel&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_7BDADADE2652498B8B83199178FFCC20'>
            <properties context=''>
              <relation connection='excel-direct.1lg81ap1lqiv1h1bmcmj402hhios' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_DC14C8B55B3B4470B1751A8276E5AD1E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Location,Forecast Indicator' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Table 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 1)' name='federated.08tw9690ecxeru14rx61a1wn55hd' />
          </datasources>
          <datasource-dependencies datasource='federated.08tw9690ecxeru14rx61a1wn55hd'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08tw9690ecxeru14rx61a1wn55hd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08tw9690ecxeru14rx61a1wn55hd].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08tw9690ecxeru14rx61a1wn55hd].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08tw9690ecxeru14rx61a1wn55hd].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.08tw9690ecxeru14rx61a1wn55hd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.08tw9690ecxeru14rx61a1wn55hd].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.08tw9690ecxeru14rx61a1wn55hd].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.08tw9690ecxeru14rx61a1wn55hd].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.08tw9690ecxeru14rx61a1wn55hd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.08tw9690ecxeru14rx61a1wn55hd].[:Measure Names]' value='116' />
            <format attr='color' value='#c82b43' />
            <format attr='text-format' field='[federated.08tw9690ecxeru14rx61a1wn55hd].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.08tw9690ecxeru14rx61a1wn55hd].[Multiple Values]' value='N' />
            <format attr='color' field='[federated.08tw9690ecxeru14rx61a1wn55hd].[Multiple Values]' value='#c30941' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' data-class='subtotal' value='#ffffff' />
            <format attr='background-color' scope='cols' value='#c82b43' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.08tw9690ecxeru14rx61a1wn55hd].[:Measure Names]' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#ffffff' />
            <format attr='background-color' data-class='subtotal' value='#ffffff' />
            <format attr='background-color' data-class='subtotal' scope='rows' value='#ffffff' />
            <format attr='background-color' data-class='total' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.08tw9690ecxeru14rx61a1wn55hd].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.08tw9690ecxeru14rx61a1wn55hd].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{622DD550-A9E0-48F4-A0F3-F4F3943FC0FF}' />
    </worksheet>
    <worksheet name='Table 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 2)' name='federated.1uq1h6o0mrh53517huagz1ia3a17' />
          </datasources>
          <datasource-dependencies datasource='federated.1uq1h6o0mrh53517huagz1ia3a17'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1uq1h6o0mrh53517huagz1ia3a17].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1uq1h6o0mrh53517huagz1ia3a17].[none:location:nk]' />
              <color column='[federated.1uq1h6o0mrh53517huagz1ia3a17].[none:location:nk]' />
              <wedge-size column='[federated.1uq1h6o0mrh53517huagz1ia3a17].[sum:TotalDeathCount:qk]' />
              <size column='[federated.1uq1h6o0mrh53517huagz1ia3a17].[sum:TotalDeathCount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6C69EC2D-D48E-4BE5-995B-87F8172CE04C}' />
    </worksheet>
    <worksheet name='Table 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 3)' name='federated.15kcvxb0txs0f51d6uro915ws39e' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15kcvxb0txs0f51d6uro915ws39e'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.15kcvxb0txs0f51d6uro915ws39e].[sum:PercentPopulationInfected:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2dada</color>
                <color>#f3c3c4</color>
                <color>#f5acad</color>
                <color>#f69596</color>
                <color>#f87d7f</color>
                <color>#f96567</color>
                <color>#fa4d50</color>
                <color>#fc3437</color>
                <color>#fd1c1f</color>
                <color>#ff0307</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.15kcvxb0txs0f51d6uro915ws39e].[sum:PercentPopulationInfected:qk]' value='(Percent Population Infected)'>
              <formatted-text>
                <run>(Percent Population Infected)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.15kcvxb0txs0f51d6uro915ws39e].[none:Location:nk]' />
              <lod column='[federated.15kcvxb0txs0f51d6uro915ws39e].[none:Location:nk]' />
              <color column='[federated.15kcvxb0txs0f51d6uro915ws39e].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.15kcvxb0txs0f51d6uro915ws39e].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15kcvxb0txs0f51d6uro915ws39e].[Latitude (generated)]</rows>
        <cols>[federated.15kcvxb0txs0f51d6uro915ws39e].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D3AA843C-BEA7-49A2-BB6C-09BCC1DF0AA3}' />
    </worksheet>
    <worksheet name='Table 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.0loyulk03vi2af14mktzx0qzlwgs' />
          </datasources>
          <datasource-dependencies datasource='federated.0loyulk03vi2af14mktzx0qzlwgs'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0loyulk03vi2af14mktzx0qzlwgs].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0loyulk03vi2af14mktzx0qzlwgs].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0loyulk03vi2af14mktzx0qzlwgs].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0loyulk03vi2af14mktzx0qzlwgs].[tmn:date:qk]' value='89' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0loyulk03vi2af14mktzx0qzlwgs].[none:Location:nk]' />
              <text column='[federated.0loyulk03vi2af14mktzx0qzlwgs].[none:Location:nk]' />
              <color column='[federated.0loyulk03vi2af14mktzx0qzlwgs].[none:Forecast Indicator:nk]' />
              <text column='[federated.0loyulk03vi2af14mktzx0qzlwgs].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0loyulk03vi2af14mktzx0qzlwgs].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0loyulk03vi2af14mktzx0qzlwgs].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{F0F1E45A-1F67-481C-9C44-0DCEDEA9AB91}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98148' id='18' param='horz' type-v2='layout-flow' w='99068' x='466' y='926'>
            <zone h='98148' id='13' param='horz' type-v2='layout-flow' w='99068' x='466' y='926'>
              <zone h='98148' id='8' param='horz' type-v2='layout-flow' w='99068' x='466' y='926'>
                <zone h='98148' id='6' type-v2='layout-basic' w='99068' x='466' y='926'>
                  <zone h='13194' id='3' name='Table 1' w='22072' x='466' y='926'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='31829' id='5' name='Table 2' w='11785' x='466' y='14120'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='53125' id='11' name='Table 4' w='87637' x='466' y='45949'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45023' id='15' name='Table 3' w='65580' x='22538' y='926'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='743' h='53125' id='14' is-fixed='true' name='Table 4' pane-specification-id='0' param='[federated.0loyulk03vi2af14mktzx0qzlwgs].[none:Location:nk]&#10;[federated.0loyulk03vi2af14mktzx0qzlwgs].[none:Forecast Indicator:nk]' type-v2='color' w='11431' x='88103' y='45949'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45023' id='16' name='Table 3' pane-specification-id='1' param='[federated.15kcvxb0txs0f51d6uro915ws39e].[sum:PercentPopulationInfected:qk]' type-v2='color' w='11416' x='88118' y='926'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='31829' id='19' name='Table 2' pane-specification-id='0' param='[federated.1uq1h6o0mrh53517huagz1ia3a17].[none:location:nk]' type-v2='color' w='10287' x='12251' y='14120'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98148' id='20' param='vert' type-v2='layout-flow' w='99068' x='466' y='926'>
                <zone fixed-size='98' h='13194' id='3' is-fixed='true' name='Table 1' w='22072' x='466' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45023' id='15' is-fixed='true' name='Table 3' w='65580' x='22538' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='45023' id='16' name='Table 3' pane-specification-id='1' param='[federated.15kcvxb0txs0f51d6uro915ws39e].[sum:PercentPopulationInfected:qk]' type-v2='color' w='11416' x='88118' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='247' h='31829' id='5' is-fixed='true' name='Table 2' w='11785' x='466' y='14120'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='31829' id='19' name='Table 2' pane-specification-id='0' param='[federated.1uq1h6o0mrh53517huagz1ia3a17].[none:location:nk]' type-v2='color' w='10287' x='12251' y='14120'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53125' id='11' is-fixed='true' name='Table 4' w='87637' x='466' y='45949'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='743' h='53125' id='14' name='Table 4' pane-specification-id='0' param='[federated.0loyulk03vi2af14mktzx0qzlwgs].[none:Location:nk]&#10;[federated.0loyulk03vi2af14mktzx0qzlwgs].[none:Forecast Indicator:nk]' type-v2='color' w='11431' x='88103' y='45949'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B7E56A5B-A0E1-417F-9079-7CACCF4ABF9C}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Table 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08tw9690ecxeru14rx61a1wn55hd].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3060CDA9-1F82-45E1-A42F-872DABA26550}' />
    </window>
    <window class='worksheet' name='Table 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1uq1h6o0mrh53517huagz1ia3a17].[sum:TotalDeathCount:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1uq1h6o0mrh53517huagz1ia3a17].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1uq1h6o0mrh53517huagz1ia3a17].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{69527E71-EA07-4B5B-A7C5-2B14BFC98D13}' />
    </window>
    <window class='worksheet' name='Table 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.15kcvxb0txs0f51d6uro915ws39e].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15kcvxb0txs0f51d6uro915ws39e].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{A258FB24-D5F5-444F-AF5E-F2025E160775}' />
    </window>
    <window class='worksheet' name='Table 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0loyulk03vi2af14mktzx0qzlwgs].[none:Location:nk]&#10;[federated.0loyulk03vi2af14mktzx0qzlwgs].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0loyulk03vi2af14mktzx0qzlwgs].[qr:date:ok]</field>
            <field>[federated.0loyulk03vi2af14mktzx0qzlwgs].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D231CE8-0D0D-495D-A6E6-DC500A861153}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Table 1' />
        <viewpoint name='Table 2'>
          <highlight>
            <color-one-way>
              <field>[federated.1uq1h6o0mrh53517huagz1ia3a17].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Table 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Table 4'>
          <zoom type='entire-view' />
          <highlight field='[federated.0loyulk03vi2af14mktzx0qzlwgs].[none:Location:nk]&#10;[federated.0loyulk03vi2af14mktzx0qzlwgs].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='14' />
      <simple-id uuid='{8BB7BA9A-06EE-4D76-81A3-595DD2273E8D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='44' name='Table 1' width='192'>
      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
      Cmi3RlMhAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='164' name='Table 2' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='Table 3' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Table 4' width='192'>
      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
      T+A2DC0AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
